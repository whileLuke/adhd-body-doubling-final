{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukee\\\\Documents\\\\garden-adhd-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [garden, setGarden] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showBee, setShowBee] = useState(false);\n  const [beeMessage, setBeeMessage] = useState('');\n  const userId = 'default';\n  const checkInTimerRef = useRef(null);\n  const lastCheckInRef = useRef(Date.now());\n\n  // Plant icons for different task sizes\n  const plantIcons = {\n    small: 'ðŸŒ±',\n    medium: 'ðŸŒ¿',\n    big: 'ðŸŒ³'\n  };\n\n  // Load garden and chat history on component mount\n  useEffect(() => {\n    loadGarden();\n    loadChatHistory();\n\n    // Start periodic check-ins\n    startCheckInTimer();\n\n    // Cleanup timer on unmount\n    return () => {\n      if (checkInTimerRef.current) {\n        clearInterval(checkInTimerRef.current);\n      }\n    };\n  }, []);\n  const startCheckInTimer = () => {\n    // Check in every 60 seconds (1 minute)\n    checkInTimerRef.current = setInterval(() => {\n      const timeSinceLastMessage = Date.now() - lastCheckInRef.current;\n      // Only check in if it's been more than 1 minute since last interaction\n      if (timeSinceLastMessage > 60000) {\n        initiateCheckIn();\n      }\n    }, 60000);\n  };\n  const initiateCheckIn = () => {\n    const checkInMessages = [\"How's your progress going?\", \"Need any help with your tasks?\", \"How are you feeling about your current work?\", \"Want to talk through anything you're working on?\", \"How's your focus today?\"];\n    const randomMessage = checkInMessages[Math.floor(Math.random() * checkInMessages.length)];\n    setChatMessages(prev => [...prev, {\n      role: 'assistant',\n      content: randomMessage,\n      isCheckIn: true\n    }]);\n    lastCheckInRef.current = Date.now();\n  };\n  const loadGarden = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/garden/${userId}`);\n      const data = await response.json();\n      setGarden(data.garden);\n    } catch (error) {\n      console.error('Error loading garden:', error);\n    }\n  };\n  const loadChatHistory = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/chat-history/${userId}`);\n      const data = await response.json();\n      setChatMessages(data.history);\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n    }\n  };\n  const showBeeCompanion = message => {\n    setBeeMessage(message);\n    setShowBee(true);\n    setTimeout(() => setShowBee(false), 3000);\n  };\n  const plantTask = async taskSize => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/garden/${userId}/plant`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          taskSize\n        })\n      });\n      const data = await response.json();\n      setGarden(data.garden);\n      showBeeCompanion(`Nice! Added a ${taskSize} task to your garden`);\n    } catch (error) {\n      console.error('Error planting task:', error);\n    }\n  };\n  const waterGarden = () => {\n    showBeeCompanion(\"Garden refreshed!\");\n  };\n  const determineTaskSize = message => {\n    const lowerMessage = message.toLowerCase();\n\n    // Keywords that suggest task complexity\n    const smallKeywords = ['quick', 'small', 'easy', 'simple', 'brief', 'short', 'minor', 'little'];\n    const bigKeywords = ['big', 'large', 'major', 'complex', 'difficult', 'project', 'long', 'extensive', 'challenging'];\n\n    // Time indicators\n    const timeIndicators = {\n      small: ['minute', 'minutes', '5 min', '10 min', '15 min'],\n      medium: ['hour', 'hours', '1 hour', '2 hours', 'afternoon'],\n      big: ['day', 'days', 'week', 'weeks', 'month']\n    };\n    let smallScore = 0;\n    let bigScore = 0;\n\n    // Check for keywords\n    smallKeywords.forEach(keyword => {\n      if (lowerMessage.includes(keyword)) smallScore++;\n    });\n    bigKeywords.forEach(keyword => {\n      if (lowerMessage.includes(keyword)) bigScore++;\n    });\n\n    // Check for time indicators\n    Object.entries(timeIndicators).forEach(([size, indicators]) => {\n      indicators.forEach(indicator => {\n        if (lowerMessage.includes(indicator)) {\n          if (size === 'small') smallScore += 2;else if (size === 'big') bigScore += 2;\n        }\n      });\n    });\n\n    // Determine size based on scores\n    if (smallScore > bigScore) return 'small';\n    if (bigScore > smallScore) return 'big';\n    return 'medium'; // default\n  };\n  const generateResponse = message => {\n    const lowerMessage = message.toLowerCase();\n\n    // Check if user wants to add a task\n    if (lowerMessage.includes('task') || lowerMessage.includes('todo') || lowerMessage.includes('need to') || lowerMessage.includes('should')) {\n      const taskSize = determineTaskSize(message);\n\n      // Auto-plant the task\n      plantTask(taskSize);\n      return `I've added that as a ${taskSize} task to your garden. ${getEncouragement()}`;\n    }\n\n    // Supportive responses for different contexts\n    if (lowerMessage.includes('stuck') || lowerMessage.includes('difficult') || lowerMessage.includes('hard')) {\n      return \"It sounds challenging. What specific part is giving you trouble? Sometimes breaking it down into smaller steps can help.\";\n    }\n    if (lowerMessage.includes('tired') || lowerMessage.includes('exhausted') || lowerMessage.includes('burnout')) {\n      return \"It's important to take care of yourself. Consider taking a short break or tackling something smaller for now.\";\n    }\n    if (lowerMessage.includes('done') || lowerMessage.includes('finished') || lowerMessage.includes('completed')) {\n      return \"Great work! How do you feel about what you accomplished?\";\n    }\n    if (lowerMessage.includes('help') || lowerMessage.includes('advice')) {\n      return \"I'm here to help. What would you like assistance with?\";\n    }\n\n    // Default supportive response\n    return \"I understand. Want to talk more about what's on your mind?\";\n  };\n  const getEncouragement = () => {\n    const encouragements = [\"You're making good progress.\", \"Keep up the momentum.\", \"Nice work staying organized.\", \"You're building good habits.\", \"That's progress worth noting.\"];\n    return encouragements[Math.floor(Math.random() * encouragements.length)];\n  };\n  const sendMessageToAI = async message => {\n    setIsLoading(true);\n    lastCheckInRef.current = Date.now(); // Reset check-in timer\n\n    try {\n      // For now, use local response generation\n      // In production, you'd send to your API\n      const response = generateResponse(message);\n      setChatMessages(prev => [...prev, {\n        role: 'user',\n        content: message\n      }, {\n        role: 'assistant',\n        content: response\n      }]);\n\n      // If you want to use the API instead:\n      /*\n      const response = await fetch(`${API_BASE_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message, userId }),\n      });\n       const data = await response.json();\n      \n      setChatMessages(prev => [...prev, \n        { role: 'user', content: message },\n        { role: 'assistant', content: data.response || data.message }\n      ]);\n      */\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setChatMessages(prev => [...prev, {\n        role: 'user',\n        content: message\n      }, {\n        role: 'assistant',\n        content: \"I'm having trouble right now, but I'm here to help. Try again in a moment.\"\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSendMessage = () => {\n    if (inputMessage.trim()) {\n      sendMessageToAI(inputMessage);\n      setInputMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-6 mb-6 border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900 mb-3\",\n          children: \"Task Garden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 leading-relaxed\",\n          children: \"Plant tasks of different sizes and watch your productivity garden grow. Chat with your AI assistant for help, task planning, and regular check-ins.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-br from-green-400 to-green-500 rounded-xl shadow-lg p-6 relative overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-white text-xl font-semibold mb-4\",\n            children: \"Plant New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => plantTask('small'),\n              className: \"bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-4 rounded-lg flex flex-col items-center transition-all duration-200 transform hover:scale-105\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-2xl mb-2\",\n                children: \"\\uD83C\\uDF31\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Small Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm opacity-75\",\n                children: \"Quick & Simple\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => plantTask('medium'),\n              className: \"bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-4 rounded-lg flex flex-col items-center transition-all duration-200 transform hover:scale-105\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-2xl mb-2\",\n                children: \"\\uD83C\\uDF3F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Medium Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm opacity-75\",\n                children: \"Moderate Effort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => plantTask('big'),\n              className: \"bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-4 rounded-lg flex flex-col items-center transition-all duration-200 transform hover:scale-105\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-2xl mb-2\",\n                children: \"\\uD83C\\uDF33\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: \"Big Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm opacity-75\",\n                children: \"Major Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-white text-lg font-semibold mb-3\",\n            children: \"Your Garden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white bg-opacity-20 rounded-lg p-4 min-h-24 flex flex-wrap gap-2\",\n            children: garden.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white opacity-75\",\n              children: \"Plant your first task to start growing!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this) : garden.map(plant => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl animate-pulse\",\n              children: plantIcons[plant.type]\n            }, plant.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), showBee && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 right-4 bg-yellow-100 text-gray-800 p-3 rounded-lg shadow-lg max-w-xs animate-fade-in border border-yellow-200\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: beeMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white bg-opacity-95 rounded-lg p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 rounded-lg p-4 max-h-48 overflow-y-auto border\",\n              children: chatMessages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-center\",\n                children: \"I'm here to help with your tasks and check in regularly. What are you working on?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-3\",\n                children: chatMessages.slice(-6).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${msg.role === 'user' ? 'bg-blue-500 text-white' : msg.isCheckIn ? 'bg-yellow-100 text-gray-800 border border-yellow-200' : 'bg-gray-200 text-gray-800'}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-sm\",\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: inputMessage,\n              onChange: e => setInputMessage(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Describe your task, ask for help, or just chat...\",\n              className: \"flex-1 p-3 bg-white border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              disabled: isLoading || !inputMessage.trim(),\n              className: \"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 text-white px-6 py-3 rounded-lg transition-colors font-medium\",\n              children: isLoading ? '...' : 'Send'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), chatMessages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-white rounded-xl shadow-lg p-6 border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4 text-gray-800\",\n          children: \"Conversation History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3 max-h-96 overflow-y-auto\",\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 rounded-lg ${msg.role === 'user' ? 'bg-blue-50 border-l-4 border-blue-500' : msg.isCheckIn ? 'bg-yellow-50 border-l-4 border-yellow-500' : 'bg-gray-50 border-l-4 border-gray-300'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium text-sm mb-1 text-gray-600\",\n              children: msg.role === 'user' ? 'You' : msg.isCheckIn ? 'Assistant (Check-in)' : 'Assistant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-800\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w1aP6KtZuweRXA3mCcx4I/cD9PQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","App","_s","garden","setGarden","chatMessages","setChatMessages","inputMessage","setInputMessage","isLoading","setIsLoading","showBee","setShowBee","beeMessage","setBeeMessage","userId","checkInTimerRef","lastCheckInRef","Date","now","plantIcons","small","medium","big","loadGarden","loadChatHistory","startCheckInTimer","current","clearInterval","setInterval","timeSinceLastMessage","initiateCheckIn","checkInMessages","randomMessage","Math","floor","random","length","prev","role","content","isCheckIn","response","fetch","data","json","error","console","history","showBeeCompanion","message","setTimeout","plantTask","taskSize","method","headers","body","JSON","stringify","waterGarden","determineTaskSize","lowerMessage","toLowerCase","smallKeywords","bigKeywords","timeIndicators","smallScore","bigScore","forEach","keyword","includes","Object","entries","size","indicators","indicator","generateResponse","getEncouragement","encouragements","sendMessageToAI","handleSendMessage","trim","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","plant","type","id","slice","msg","index","value","onChange","target","onKeyPress","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/lukee/Documents/garden-adhd-app/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [garden, setGarden] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showBee, setShowBee] = useState(false);\n  const [beeMessage, setBeeMessage] = useState('');\n  const userId = 'default';\n  const checkInTimerRef = useRef(null);\n  const lastCheckInRef = useRef(Date.now());\n\n  // Plant icons for different task sizes\n  const plantIcons = {\n    small: 'ðŸŒ±',\n    medium: 'ðŸŒ¿',\n    big: 'ðŸŒ³'\n  };\n\n  // Load garden and chat history on component mount\n  useEffect(() => {\n    loadGarden();\n    loadChatHistory();\n    \n    // Start periodic check-ins\n    startCheckInTimer();\n    \n    // Cleanup timer on unmount\n    return () => {\n      if (checkInTimerRef.current) {\n        clearInterval(checkInTimerRef.current);\n      }\n    };\n  }, []);\n\n  const startCheckInTimer = () => {\n    // Check in every 60 seconds (1 minute)\n    checkInTimerRef.current = setInterval(() => {\n      const timeSinceLastMessage = Date.now() - lastCheckInRef.current;\n      // Only check in if it's been more than 1 minute since last interaction\n      if (timeSinceLastMessage > 60000) {\n        initiateCheckIn();\n      }\n    }, 60000);\n  };\n\n  const initiateCheckIn = () => {\n    const checkInMessages = [\n      \"How's your progress going?\",\n      \"Need any help with your tasks?\",\n      \"How are you feeling about your current work?\",\n      \"Want to talk through anything you're working on?\",\n      \"How's your focus today?\"\n    ];\n    \n    const randomMessage = checkInMessages[Math.floor(Math.random() * checkInMessages.length)];\n    \n    setChatMessages(prev => [...prev, {\n      role: 'assistant',\n      content: randomMessage,\n      isCheckIn: true\n    }]);\n    \n    lastCheckInRef.current = Date.now();\n  };\n\n  const loadGarden = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/garden/${userId}`);\n      const data = await response.json();\n      setGarden(data.garden);\n    } catch (error) {\n      console.error('Error loading garden:', error);\n    }\n  };\n\n  const loadChatHistory = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/chat-history/${userId}`);\n      const data = await response.json();\n      setChatMessages(data.history);\n    } catch (error) {\n      console.error('Error loading chat history:', error);\n    }\n  };\n\n  const showBeeCompanion = (message) => {\n    setBeeMessage(message);\n    setShowBee(true);\n    setTimeout(() => setShowBee(false), 3000);\n  };\n\n  const plantTask = async (taskSize) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/garden/${userId}/plant`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ taskSize }),\n      });\n      \n      const data = await response.json();\n      setGarden(data.garden);\n      showBeeCompanion(`Nice! Added a ${taskSize} task to your garden`);\n    } catch (error) {\n      console.error('Error planting task:', error);\n    }\n  };\n\n  const waterGarden = () => {\n    showBeeCompanion(\"Garden refreshed!\");\n  };\n\n  const determineTaskSize = (message) => {\n    const lowerMessage = message.toLowerCase();\n    \n    // Keywords that suggest task complexity\n    const smallKeywords = ['quick', 'small', 'easy', 'simple', 'brief', 'short', 'minor', 'little'];\n    const bigKeywords = ['big', 'large', 'major', 'complex', 'difficult', 'project', 'long', 'extensive', 'challenging'];\n    \n    // Time indicators\n    const timeIndicators = {\n      small: ['minute', 'minutes', '5 min', '10 min', '15 min'],\n      medium: ['hour', 'hours', '1 hour', '2 hours', 'afternoon'],\n      big: ['day', 'days', 'week', 'weeks', 'month']\n    };\n    \n    let smallScore = 0;\n    let bigScore = 0;\n    \n    // Check for keywords\n    smallKeywords.forEach(keyword => {\n      if (lowerMessage.includes(keyword)) smallScore++;\n    });\n    \n    bigKeywords.forEach(keyword => {\n      if (lowerMessage.includes(keyword)) bigScore++;\n    });\n    \n    // Check for time indicators\n    Object.entries(timeIndicators).forEach(([size, indicators]) => {\n      indicators.forEach(indicator => {\n        if (lowerMessage.includes(indicator)) {\n          if (size === 'small') smallScore += 2;\n          else if (size === 'big') bigScore += 2;\n        }\n      });\n    });\n    \n    // Determine size based on scores\n    if (smallScore > bigScore) return 'small';\n    if (bigScore > smallScore) return 'big';\n    return 'medium'; // default\n  };\n\n  const generateResponse = (message) => {\n    const lowerMessage = message.toLowerCase();\n    \n    // Check if user wants to add a task\n    if (lowerMessage.includes('task') || lowerMessage.includes('todo') || lowerMessage.includes('need to') || lowerMessage.includes('should')) {\n      const taskSize = determineTaskSize(message);\n      \n      // Auto-plant the task\n      plantTask(taskSize);\n      \n      return `I've added that as a ${taskSize} task to your garden. ${getEncouragement()}`;\n    }\n    \n    // Supportive responses for different contexts\n    if (lowerMessage.includes('stuck') || lowerMessage.includes('difficult') || lowerMessage.includes('hard')) {\n      return \"It sounds challenging. What specific part is giving you trouble? Sometimes breaking it down into smaller steps can help.\";\n    }\n    \n    if (lowerMessage.includes('tired') || lowerMessage.includes('exhausted') || lowerMessage.includes('burnout')) {\n      return \"It's important to take care of yourself. Consider taking a short break or tackling something smaller for now.\";\n    }\n    \n    if (lowerMessage.includes('done') || lowerMessage.includes('finished') || lowerMessage.includes('completed')) {\n      return \"Great work! How do you feel about what you accomplished?\";\n    }\n    \n    if (lowerMessage.includes('help') || lowerMessage.includes('advice')) {\n      return \"I'm here to help. What would you like assistance with?\";\n    }\n    \n    // Default supportive response\n    return \"I understand. Want to talk more about what's on your mind?\";\n  };\n\n  const getEncouragement = () => {\n    const encouragements = [\n      \"You're making good progress.\",\n      \"Keep up the momentum.\",\n      \"Nice work staying organized.\",\n      \"You're building good habits.\",\n      \"That's progress worth noting.\"\n    ];\n    return encouragements[Math.floor(Math.random() * encouragements.length)];\n  };\n\n  const sendMessageToAI = async (message) => {\n    setIsLoading(true);\n    lastCheckInRef.current = Date.now(); // Reset check-in timer\n    \n    try {\n      // For now, use local response generation\n      // In production, you'd send to your API\n      const response = generateResponse(message);\n      \n      setChatMessages(prev => [...prev, \n        { role: 'user', content: message },\n        { role: 'assistant', content: response }\n      ]);\n      \n      // If you want to use the API instead:\n      /*\n      const response = await fetch(`${API_BASE_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message, userId }),\n      });\n\n      const data = await response.json();\n      \n      setChatMessages(prev => [...prev, \n        { role: 'user', content: message },\n        { role: 'assistant', content: data.response || data.message }\n      ]);\n      */\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setChatMessages(prev => [...prev,\n        { role: 'user', content: message },\n        { role: 'assistant', content: \"I'm having trouble right now, but I'm here to help. Try again in a moment.\" }\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (inputMessage.trim()) {\n      sendMessageToAI(inputMessage);\n      setInputMessage('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6 border border-gray-200\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-3\">Task Garden</h1>\n          <p className=\"text-gray-600 leading-relaxed\">\n            Plant tasks of different sizes and watch your productivity garden grow. \n            Chat with your AI assistant for help, task planning, and regular check-ins.\n          </p>\n        </div>\n\n        {/* Main Garden Interface */}\n        <div className=\"bg-gradient-to-br from-green-400 to-green-500 rounded-xl shadow-lg p-6 relative overflow-hidden\">\n          {/* Task Planting Section */}\n          <div className=\"mb-6\">\n            <h2 className=\"text-white text-xl font-semibold mb-4\">Plant New Task</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <button\n                onClick={() => plantTask('small')}\n                className=\"bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-4 rounded-lg flex flex-col items-center transition-all duration-200 transform hover:scale-105\"\n              >\n                <span className=\"text-2xl mb-2\">ðŸŒ±</span>\n                <span className=\"font-medium\">Small Task</span>\n                <span className=\"text-sm opacity-75\">Quick & Simple</span>\n              </button>\n              <button\n                onClick={() => plantTask('medium')}\n                className=\"bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-4 rounded-lg flex flex-col items-center transition-all duration-200 transform hover:scale-105\"\n              >\n                <span className=\"text-2xl mb-2\">ðŸŒ¿</span>\n                <span className=\"font-medium\">Medium Task</span>\n                <span className=\"text-sm opacity-75\">Moderate Effort</span>\n              </button>\n              <button\n                onClick={() => plantTask('big')}\n                className=\"bg-white bg-opacity-20 hover:bg-opacity-30 text-white p-4 rounded-lg flex flex-col items-center transition-all duration-200 transform hover:scale-105\"\n              >\n                <span className=\"text-2xl mb-2\">ðŸŒ³</span>\n                <span className=\"font-medium\">Big Task</span>\n                <span className=\"text-sm opacity-75\">Major Project</span>\n              </button>\n            </div>\n          </div>\n\n          {/* Garden Display */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-white text-lg font-semibold mb-3\">Your Garden</h3>\n            <div className=\"bg-white bg-opacity-20 rounded-lg p-4 min-h-24 flex flex-wrap gap-2\">\n              {garden.length === 0 ? (\n                <span className=\"text-white opacity-75\">Plant your first task to start growing!</span>\n              ) : (\n                garden.map((plant) => (\n                  <span key={plant.id} className=\"text-2xl animate-pulse\">\n                    {plantIcons[plant.type]}\n                  </span>\n                ))\n              )}\n            </div>\n          </div>\n\n          {/* AI Assistant Notification */}\n          {showBee && (\n            <div className=\"absolute top-4 right-4 bg-yellow-100 text-gray-800 p-3 rounded-lg shadow-lg max-w-xs animate-fade-in border border-yellow-200\">\n              <p className=\"text-sm\">{beeMessage}</p>\n            </div>\n          )}\n\n          {/* Chat Interface */}\n          <div className=\"bg-white bg-opacity-95 rounded-lg p-4\">\n            <div className=\"mb-4\">\n              <div className=\"bg-gray-50 rounded-lg p-4 max-h-48 overflow-y-auto border\">\n                {chatMessages.length === 0 ? (\n                  <p className=\"text-gray-500 text-center\">I'm here to help with your tasks and check in regularly. What are you working on?</p>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {chatMessages.slice(-6).map((msg, index) => (\n                      <div key={index} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>\n                        <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                          msg.role === 'user' \n                            ? 'bg-blue-500 text-white' \n                            : msg.isCheckIn \n                              ? 'bg-yellow-100 text-gray-800 border border-yellow-200'\n                              : 'bg-gray-200 text-gray-800'\n                        }`}>\n                          <div className=\"text-sm\">{msg.content}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"flex gap-2\">\n              <input\n                type=\"text\"\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Describe your task, ask for help, or just chat...\"\n                className=\"flex-1 p-3 bg-white border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                disabled={isLoading}\n              />\n              <button\n                onClick={handleSendMessage}\n                disabled={isLoading || !inputMessage.trim()}\n                className=\"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 text-white px-6 py-3 rounded-lg transition-colors font-medium\"\n              >\n                {isLoading ? '...' : 'Send'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Chat History */}\n        {chatMessages.length > 0 && (\n          <div className=\"mt-6 bg-white rounded-xl shadow-lg p-6 border border-gray-200\">\n            <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">Conversation History</h3>\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n              {chatMessages.map((msg, index) => (\n                <div key={index} className={`p-4 rounded-lg ${\n                  msg.role === 'user' \n                    ? 'bg-blue-50 border-l-4 border-blue-500' \n                    : msg.isCheckIn\n                      ? 'bg-yellow-50 border-l-4 border-yellow-500'\n                      : 'bg-gray-50 border-l-4 border-gray-300'\n                }`}>\n                  <div className=\"font-medium text-sm mb-1 text-gray-600\">\n                    {msg.role === 'user' ? 'You' : msg.isCheckIn ? 'Assistant (Check-in)' : 'Assistant'}\n                  </div>\n                  <div className=\"text-gray-800\">{msg.content}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMuB,MAAM,GAAG,SAAS;EACxB,MAAMC,eAAe,GAAGtB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMuB,cAAc,GAAGvB,MAAM,CAACwB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,GAAG,EAAE;EACP,CAAC;;EAED;EACA9B,SAAS,CAAC,MAAM;IACd+B,UAAU,CAAC,CAAC;IACZC,eAAe,CAAC,CAAC;;IAEjB;IACAC,iBAAiB,CAAC,CAAC;;IAEnB;IACA,OAAO,MAAM;MACX,IAAIV,eAAe,CAACW,OAAO,EAAE;QAC3BC,aAAa,CAACZ,eAAe,CAACW,OAAO,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAV,eAAe,CAACW,OAAO,GAAGE,WAAW,CAAC,MAAM;MAC1C,MAAMC,oBAAoB,GAAGZ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,cAAc,CAACU,OAAO;MAChE;MACA,IAAIG,oBAAoB,GAAG,KAAK,EAAE;QAChCC,eAAe,CAAC,CAAC;MACnB;IACF,CAAC,EAAE,KAAK,CAAC;EACX,CAAC;EAED,MAAMA,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,eAAe,GAAG,CACtB,4BAA4B,EAC5B,gCAAgC,EAChC,8CAA8C,EAC9C,kDAAkD,EAClD,yBAAyB,CAC1B;IAED,MAAMC,aAAa,GAAGD,eAAe,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,eAAe,CAACK,MAAM,CAAC,CAAC;IAEzF/B,eAAe,CAACgC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAChCC,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEP,aAAa;MACtBQ,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;IAEHxB,cAAc,CAACU,OAAO,GAAGT,IAAI,CAACC,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG9C,YAAY,eAAekB,MAAM,EAAE,CAAC;MACpE,MAAM6B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCzC,SAAS,CAACwC,IAAI,CAACzC,MAAM,CAAC;IACxB,CAAC,CAAC,OAAO2C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMrB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG9C,YAAY,qBAAqBkB,MAAM,EAAE,CAAC;MAC1E,MAAM6B,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCvC,eAAe,CAACsC,IAAI,CAACI,OAAO,CAAC;IAC/B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMG,gBAAgB,GAAIC,OAAO,IAAK;IACpCpC,aAAa,CAACoC,OAAO,CAAC;IACtBtC,UAAU,CAAC,IAAI,CAAC;IAChBuC,UAAU,CAAC,MAAMvC,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAC3C,CAAC;EAED,MAAMwC,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG9C,YAAY,eAAekB,MAAM,QAAQ,EAAE;QACzEuC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEL;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCzC,SAAS,CAACwC,IAAI,CAACzC,MAAM,CAAC;MACtB8C,gBAAgB,CAAC,iBAAiBI,QAAQ,sBAAsB,CAAC;IACnE,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxBV,gBAAgB,CAAC,mBAAmB,CAAC;EACvC,CAAC;EAED,MAAMW,iBAAiB,GAAIV,OAAO,IAAK;IACrC,MAAMW,YAAY,GAAGX,OAAO,CAACY,WAAW,CAAC,CAAC;;IAE1C;IACA,MAAMC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;IAC/F,MAAMC,WAAW,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,aAAa,CAAC;;IAEpH;IACA,MAAMC,cAAc,GAAG;MACrB5C,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACzDC,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;MAC3DC,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO;IAC/C,CAAC;IAED,IAAI2C,UAAU,GAAG,CAAC;IAClB,IAAIC,QAAQ,GAAG,CAAC;;IAEhB;IACAJ,aAAa,CAACK,OAAO,CAACC,OAAO,IAAI;MAC/B,IAAIR,YAAY,CAACS,QAAQ,CAACD,OAAO,CAAC,EAAEH,UAAU,EAAE;IAClD,CAAC,CAAC;IAEFF,WAAW,CAACI,OAAO,CAACC,OAAO,IAAI;MAC7B,IAAIR,YAAY,CAACS,QAAQ,CAACD,OAAO,CAAC,EAAEF,QAAQ,EAAE;IAChD,CAAC,CAAC;;IAEF;IACAI,MAAM,CAACC,OAAO,CAACP,cAAc,CAAC,CAACG,OAAO,CAAC,CAAC,CAACK,IAAI,EAAEC,UAAU,CAAC,KAAK;MAC7DA,UAAU,CAACN,OAAO,CAACO,SAAS,IAAI;QAC9B,IAAId,YAAY,CAACS,QAAQ,CAACK,SAAS,CAAC,EAAE;UACpC,IAAIF,IAAI,KAAK,OAAO,EAAEP,UAAU,IAAI,CAAC,CAAC,KACjC,IAAIO,IAAI,KAAK,KAAK,EAAEN,QAAQ,IAAI,CAAC;QACxC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAID,UAAU,GAAGC,QAAQ,EAAE,OAAO,OAAO;IACzC,IAAIA,QAAQ,GAAGD,UAAU,EAAE,OAAO,KAAK;IACvC,OAAO,QAAQ,CAAC,CAAC;EACnB,CAAC;EAED,MAAMU,gBAAgB,GAAI1B,OAAO,IAAK;IACpC,MAAMW,YAAY,GAAGX,OAAO,CAACY,WAAW,CAAC,CAAC;;IAE1C;IACA,IAAID,YAAY,CAACS,QAAQ,CAAC,MAAM,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,MAAM,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,SAAS,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACzI,MAAMjB,QAAQ,GAAGO,iBAAiB,CAACV,OAAO,CAAC;;MAE3C;MACAE,SAAS,CAACC,QAAQ,CAAC;MAEnB,OAAO,wBAAwBA,QAAQ,yBAAyBwB,gBAAgB,CAAC,CAAC,EAAE;IACtF;;IAEA;IACA,IAAIhB,YAAY,CAACS,QAAQ,CAAC,OAAO,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,WAAW,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,MAAM,CAAC,EAAE;MACzG,OAAO,0HAA0H;IACnI;IAEA,IAAIT,YAAY,CAACS,QAAQ,CAAC,OAAO,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,WAAW,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,SAAS,CAAC,EAAE;MAC5G,OAAO,+GAA+G;IACxH;IAEA,IAAIT,YAAY,CAACS,QAAQ,CAAC,MAAM,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,UAAU,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC5G,OAAO,0DAA0D;IACnE;IAEA,IAAIT,YAAY,CAACS,QAAQ,CAAC,MAAM,CAAC,IAAIT,YAAY,CAACS,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACpE,OAAO,wDAAwD;IACjE;;IAEA;IACA,OAAO,4DAA4D;EACrE,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,cAAc,GAAG,CACrB,8BAA8B,EAC9B,uBAAuB,EACvB,8BAA8B,EAC9B,8BAA8B,EAC9B,+BAA+B,CAChC;IACD,OAAOA,cAAc,CAAC5C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG0C,cAAc,CAACzC,MAAM,CAAC,CAAC;EAC1E,CAAC;EAED,MAAM0C,eAAe,GAAG,MAAO7B,OAAO,IAAK;IACzCxC,YAAY,CAAC,IAAI,CAAC;IAClBO,cAAc,CAACU,OAAO,GAAGT,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAErC,IAAI;MACF;MACA;MACA,MAAMuB,QAAQ,GAAGkC,gBAAgB,CAAC1B,OAAO,CAAC;MAE1C5C,eAAe,CAACgC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAC9B;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEU;MAAQ,CAAC,EAClC;QAAEX,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAEE;MAAS,CAAC,CACzC,CAAC;;MAEF;MACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEI,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CxC,eAAe,CAACgC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAC9B;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEU;MAAQ,CAAC,EAClC;QAAEX,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAE;MAA6E,CAAC,CAC7G,CAAC;IACJ,CAAC,SAAS;MACR9B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMsE,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIzE,YAAY,CAAC0E,IAAI,CAAC,CAAC,EAAE;MACvBF,eAAe,CAACxE,YAAY,CAAC;MAC7BC,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,MAAM0E,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBJ,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACEpF,OAAA;IAAKyF,SAAS,EAAC,+DAA+D;IAAAC,QAAA,eAC5E1F,OAAA;MAAKyF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAEhC1F,OAAA;QAAKyF,SAAS,EAAC,+DAA+D;QAAAC,QAAA,gBAC5E1F,OAAA;UAAIyF,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtE9F,OAAA;UAAGyF,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAC;QAG7C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGN9F,OAAA;QAAKyF,SAAS,EAAC,iGAAiG;QAAAC,QAAA,gBAE9G1F,OAAA;UAAKyF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB1F,OAAA;YAAIyF,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzE9F,OAAA;YAAKyF,SAAS,EAAC,uCAAuC;YAAAC,QAAA,gBACpD1F,OAAA;cACE+F,OAAO,EAAEA,CAAA,KAAMvC,SAAS,CAAC,OAAO,CAAE;cAClCiC,SAAS,EAAC,uJAAuJ;cAAAC,QAAA,gBAEjK1F,OAAA;gBAAMyF,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACzC9F,OAAA;gBAAMyF,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC/C9F,OAAA;gBAAMyF,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACT9F,OAAA;cACE+F,OAAO,EAAEA,CAAA,KAAMvC,SAAS,CAAC,QAAQ,CAAE;cACnCiC,SAAS,EAAC,uJAAuJ;cAAAC,QAAA,gBAEjK1F,OAAA;gBAAMyF,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACzC9F,OAAA;gBAAMyF,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChD9F,OAAA;gBAAMyF,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eACT9F,OAAA;cACE+F,OAAO,EAAEA,CAAA,KAAMvC,SAAS,CAAC,KAAK,CAAE;cAChCiC,SAAS,EAAC,uJAAuJ;cAAAC,QAAA,gBAEjK1F,OAAA;gBAAMyF,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACzC9F,OAAA;gBAAMyF,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7C9F,OAAA;gBAAMyF,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN9F,OAAA;UAAKyF,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnB1F,OAAA;YAAIyF,SAAS,EAAC,uCAAuC;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtE9F,OAAA;YAAKyF,SAAS,EAAC,qEAAqE;YAAAC,QAAA,EACjFnF,MAAM,CAACkC,MAAM,KAAK,CAAC,gBAClBzC,OAAA;cAAMyF,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAuC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GAEtFvF,MAAM,CAACyF,GAAG,CAAEC,KAAK,iBACfjG,OAAA;cAAqByF,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EACpDlE,UAAU,CAACyE,KAAK,CAACC,IAAI;YAAC,GADdD,KAAK,CAACE,EAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEb,CACP;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGL/E,OAAO,iBACNf,OAAA;UAAKyF,SAAS,EAAC,+HAA+H;UAAAC,QAAA,eAC5I1F,OAAA;YAAGyF,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAEzE;UAAU;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CACN,eAGD9F,OAAA;UAAKyF,SAAS,EAAC,uCAAuC;UAAAC,QAAA,gBACpD1F,OAAA;YAAKyF,SAAS,EAAC,MAAM;YAAAC,QAAA,eACnB1F,OAAA;cAAKyF,SAAS,EAAC,2DAA2D;cAAAC,QAAA,EACvEjF,YAAY,CAACgC,MAAM,KAAK,CAAC,gBACxBzC,OAAA;gBAAGyF,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,EAAC;cAAiF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,gBAE9H9F,OAAA;gBAAKyF,SAAS,EAAC,WAAW;gBAAAC,QAAA,EACvBjF,YAAY,CAAC2F,KAAK,CAAC,CAAC,CAAC,CAAC,CAACJ,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBACrCtG,OAAA;kBAAiByF,SAAS,EAAE,QAAQY,GAAG,CAAC1D,IAAI,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;kBAAA+C,QAAA,eAC1F1F,OAAA;oBAAKyF,SAAS,EAAE,6CACdY,GAAG,CAAC1D,IAAI,KAAK,MAAM,GACf,wBAAwB,GACxB0D,GAAG,CAACxD,SAAS,GACX,sDAAsD,GACtD,2BAA2B,EAChC;oBAAA6C,QAAA,eACD1F,OAAA;sBAAKyF,SAAS,EAAC,SAAS;sBAAAC,QAAA,EAAEW,GAAG,CAACzD;oBAAO;sBAAA+C,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzC;gBAAC,GATEQ,KAAK;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUV,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN9F,OAAA;YAAKyF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB1F,OAAA;cACEkG,IAAI,EAAC,MAAM;cACXK,KAAK,EAAE5F,YAAa;cACpB6F,QAAQ,EAAGjB,CAAC,IAAK3E,eAAe,CAAC2E,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;cACjDG,UAAU,EAAEpB,cAAe;cAC3BqB,WAAW,EAAC,mDAAmD;cAC/DlB,SAAS,EAAC,oIAAoI;cAC9ImB,QAAQ,EAAE/F;YAAU;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eACF9F,OAAA;cACE+F,OAAO,EAAEX,iBAAkB;cAC3BwB,QAAQ,EAAE/F,SAAS,IAAI,CAACF,YAAY,CAAC0E,IAAI,CAAC,CAAE;cAC5CI,SAAS,EAAC,kHAAkH;cAAAC,QAAA,EAE3H7E,SAAS,GAAG,KAAK,GAAG;YAAM;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLrF,YAAY,CAACgC,MAAM,GAAG,CAAC,iBACtBzC,OAAA;QAAKyF,SAAS,EAAC,+DAA+D;QAAAC,QAAA,gBAC5E1F,OAAA;UAAIyF,SAAS,EAAC,0CAA0C;UAAAC,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClF9F,OAAA;UAAKyF,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAChDjF,YAAY,CAACuF,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBAC3BtG,OAAA;YAAiByF,SAAS,EAAE,kBAC1BY,GAAG,CAAC1D,IAAI,KAAK,MAAM,GACf,uCAAuC,GACvC0D,GAAG,CAACxD,SAAS,GACX,2CAA2C,GAC3C,uCAAuC,EAC5C;YAAA6C,QAAA,gBACD1F,OAAA;cAAKyF,SAAS,EAAC,wCAAwC;cAAAC,QAAA,EACpDW,GAAG,CAAC1D,IAAI,KAAK,MAAM,GAAG,KAAK,GAAG0D,GAAG,CAACxD,SAAS,GAAG,sBAAsB,GAAG;YAAW;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChF,CAAC,eACN9F,OAAA;cAAKyF,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEW,GAAG,CAACzD;YAAO;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAV1CQ,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxF,EAAA,CA3YQD,GAAG;AAAAwG,EAAA,GAAHxG,GAAG;AA6YZ,eAAeA,GAAG;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}